# First, specify the types that will be used
enum ColInt {
  "1", "2", "3", "9"
}

enumset ColList[2] {
  "1", "2", "3", "9"
}

enum Aggr {
  "min", "max", "sum"
}

enum NumFunc {
  "+", "-", "/"
}
enum BoolFunc {
  "=", ">", "<"
}

value Table {
	col: int;
	row: int;
}

value Empty;

# Next, specify the input/output of the synthesized program
program Morpheus(Table) -> Table;

# Finally, specify the production rules
func empty: Empty -> Empty;

func select: Table r -> Table a, ColList b {
  row(r) == row(a);
  col(r) < col(a);
}

func unite: Table r -> Table a, ColInt b, ColInt c {
  row(r) == row(a);
  col(r) == col(a) - 1;
}
